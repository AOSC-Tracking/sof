# route and pipeline index start from pcm id * 10

Define {
	SDW_SPK_STREAM 'SDW1-Playback'
	SDW_SPK_IN_STREAM 'SDW1-Capture'
	ALH_2ND_SPK_ID 22
	ALH_2ND_SPK_IN_ID 32
	SDW_AMP_BE_ID 2
	SDW_AMP_IN_BE_ID 3
	AMP_FEEDBACK_CH 2
}

Object.Dai {
	ALH."1" {
		dai_index 514
		id 		$SDW_AMP_BE_ID
		direction	"playback"
		name		$SDW_SPK_STREAM
		default_hw_conf_id	0
		rate			48000
		channels		2

		Object.Base.hw_config.1 {
			id	0
			name	"ALH514"
		}
	}
	ALH."2" {
		dai_index 515
		id 		$SDW_AMP_IN_BE_ID
		direction	"capture"
		name		$SDW_SPK_IN_STREAM
		default_hw_conf_id	1
		rate			48000
		channels		2

		Object.Base.hw_config.1 {
			id	1
			name	"ALH515"
		}
	}
}

Object.Pipeline {
	host-copier-gain-mixin-playback.20 {
		index 20

		Object.Widget.copier.1 {
			stream_name "sdw amplifiers"
		}
		Object.Widget.gain.1 {
			Object.Control.mixer.1 {
				name 'Amplifier Volume'
			}
		}
	}

	mixout-gain-dai-copier-playback.21 {
		index 21

		Object.Widget.copier.1 {
			stream_name $SDW_SPK_STREAM
			dai_type "ALH"
			copier_type "ALH"
			node_type $ALH_LINK_OUTPUT_CLASS
		}
		Object.Widget.gain.1 {
			Object.Control.mixer.1 {
				name 'Main Amplifier Volume'
			}
		}
	}

	passthrough-capture.30 {
		index 30

		Object.Widget.copier.1.stream_name	"amp feedback"
		Object.Widget.copier.1.Object.Base.audio_format.1 {
			# 32 -> 16 bits conversion is done here,
			# so in_bit_depth is 32 (and out_bit_depth is 16).
			in_bit_depth	32
		}
	}
	passthrough-be.31 {
		direction	"capture"
		index 31
		copier_type "ALH"

		Object.Widget.copier.1 {
			stream_name	$SDW_SPK_IN_STREAM
			dai_type	"ALH"
			copier_type	"ALH"
			type		"dai_out"
			node_type $ALH_LINK_INPUT_CLASS
		}
	}
}

IncludeByKey.NUM_SDW_AMPS {
"2" "platform/intel/alh-2nd-spk.conf"
}

Object.PCM {
	pcm.2 {
		name	"Speaker"
		id 2
		direction	"playback"
		Object.Base.fe_dai."Speaker" {}

		Object.PCM.pcm_caps."playback" {
			name "sdw amplifiers"
			formats 'S16_LE,S24_LE,S32_LE'
		}
	}
	pcm.3 {
		name	"Amp feedback"
		id 3
		direction	"capture"
		Object.Base.fe_dai."Amp feedback" {}

		Object.PCM.pcm_caps."capture" {
			name "amp feedback"
			formats 'S16_LE,S32_LE'
			channels_min $AMP_FEEDBACK_CH
			channels_max $AMP_FEEDBACK_CH
		}
	}
}

Object.Base {
	route.20 {
		source	"gain.21.1"
		sink	"copier.ALH.21.1"
	}

	route.21 {
		source 'mixin.20.1'
		sink 'mixout.21.1'
	}

	route.30 {
		source	"copier.ALH.31.1"
		sink	"copier.host.30.1"
	}
}
