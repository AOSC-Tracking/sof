Object.Dai {
	HDA.0 {
		name 'Analog Playback and Capture'
		id 4
		index 0
		default_hw_conf_id 4
		Object.Base.hw_config.HDA0 {}
		Object.Widget.copier.0 {
			direction playback
			index 1
			type dai_in
			dai_type "HDA"
			copier_type "HDA"
			stream_name 'Analog Playback and Capture'
			period_sink_count 0
			period_source_count 2
			node_type $HDA_LINK_OUTPUT_CLASS
			num_audio_formats 2
			# 16-bit 48KHz 2ch
			Object.Base.audio_format.1 {
				dma_buffer_size "$[$obs * 2]"
			}
			# 32-bit 48KHz 2ch
			Object.Base.audio_format.2 {
				in_bit_depth		32
				in_valid_bit_depth	32
				out_bit_depth		32
				out_valid_bit_depth	32
				dma_buffer_size "$[$obs * 2]"
			}
		}
		Object.Widget.copier.1 {
			direction capture
			index 2
			type dai_out
			dai_type "HDA"
			copier_type "HDA"
			stream_name 'Analog Playback and Capture'
			period_sink_count 2
			period_source_count 0
			node_type $HDA_LINK_INPUT_CLASS
			num_audio_formats 2
			# 16-bit 48KHz 2ch
			Object.Base.audio_format.1 {
				dma_buffer_size "$[$ibs * 2]"
			}
			# 32-bit 48KHz 2ch
			Object.Base.audio_format.2 {
				in_bit_depth		32
				in_valid_bit_depth	32
				out_bit_depth		32
				out_valid_bit_depth	32
				dma_buffer_size "$[$ibs * 2]"
			}
		}
		direction duplex
	}
	HDA.1 {
		name 'Digital Playback and Capture'
		id 5
		index 0
		default_hw_conf_id 5
		Object.Base.hw_config.HDA1 {}
		Object.Widget.copier.0 {
			direction playback
			index 3
			type dai_in
			dai_type "HDA"
			copier_type "HDA"
			stream_name 'Digital Playback and Capture'
			period_sink_count 0
			period_source_count 2
			node_type $HDA_LINK_OUTPUT_CLASS
			num_audio_formats 2
			# 16-bit 48KHz 2ch
			Object.Base.audio_format.1 {
				dma_buffer_size "$[$obs * 2]"
			}
			# 32-bit 48KHz 2ch
			Object.Base.audio_format.2 {
				in_bit_depth		32
				in_valid_bit_depth	32
				out_bit_depth		32
				out_valid_bit_depth	32
				dma_buffer_size "$[$obs * 2]"
			}
		}
		Object.Widget.copier.1 {
			direction capture
			index 4
			type dai_out
			dai_type "HDA"
			copier_type "HDA"
			stream_name 'Digital Playback and Capture'
			period_sink_count 2
			period_source_count 0
			node_type $HDA_LINK_INPUT_CLASS
			num_audio_formats 2
			# 16-bit 48KHz 2ch
			Object.Base.audio_format.1 {
				dma_buffer_size "$[$ibs * 2]"
			}
			# 32-bit 48KHz 2ch
			Object.Base.audio_format.2 {
				in_bit_depth		32
				in_valid_bit_depth	32
				out_bit_depth		32
				out_valid_bit_depth	32
				dma_buffer_size "$[$ibs * 2]"
			}
		}
		direction duplex
	}
}
Object.Pipeline {
	gain-playback.0 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.0.playback'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Playback 0'
		}

		Object.Widget.gain.1{
			Object.Control.mixer.1 {
				name 'Main PGA playback 0'
			}
		}

		format s16le
		index 1
	}
	gain-playback.1 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.1.playback'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Playback 1'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main PGA playback 1'
                        }
                }

		format s16le
		index 3
	}
	gain-capture.0 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.1.capture'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Capture 0'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main PGA capture 0'
                        }
                }

		format s16le
		index 2
	}
	gain-capture.1 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.3.capture'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Capture 1'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main PGA capture 1'
                        }
                }

		format s16le
		index 4
	}
}
Object.PCM {
	pcm.0 {
		name 'HDA Analog'
		id 0
		Object.Base.fe_dai.'HDA Analog' {}
		Object.PCM.pcm_caps.playback {
			name 'Gain Playback 0'
			formats 'S32_LE,S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.capture {
			name 'Gain Capture 0'
			formats 'S32_LE,S24_LE,S16_LE'
		}
		direction duplex
	}
	pcm.1 {
		name 'HDA Digital'
		id 1
		Object.Base.fe_dai.'HDA Digital' {}
		Object.PCM.pcm_caps.playback {
			name 'Gain Playback 1'
			formats 'S32_LE,S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.capture {
			name 'Gain Capture 1'
			formats 'S32_LE,S24_LE,S16_LE'
		}
		direction duplex
	}
}

# top-level pipeline connections
Object.Base.route.1 {
        source 'gain.1.1'
        sink 'copier.HDA.1.0'
}
Object.Base.route.2 {
	source 'copier.HDA.2.1'
	sink 'gain.2.1'
}
Object.Base.route.3 {
        source 'gain.3.1'
        sink 'copier.HDA.3.0'
}
Object.Base.route.4 {
	source 'copier.HDA.4.1'
	sink 'gain.4.1'
}
