#
# Common widget smart_amp
#
# A generic smart_amp widget. All attributes defined herein are namespaced
# by alsatplg to "Object.Widget.smart_amp.N.attribute_name"
#
# Usage: this component can be used by instantiating it in the parent object. i.e.
#
# 	Object.Widget.smart_amp."N" {
# 		index		1
# 		type		"effect"
#	}
#
# Where N is the unique instance number for the smart_amp object within the same alsaconf node.

Class.Widget."smart_amp" {
	#
	# Pipeline ID for the smart_amp widget object
	#
	DefineAttribute."index" {}

	#
	# smart_amp object instance
	#
	DefineAttribute."instance" {}

	#include common component definition
	<include/components/widget-common.conf>

	DefineAttribute."num_audio_formats" {
		# Token set reference name and type
		token_ref	"sof_tkn_comp.word"
	}

	#
	# smart_amp widget UUID
	#
	DefineAttribute."uuid" {
		type	"string"
		# Token set reference name and type
		token_ref	"sof_tkn_comp.uuid"
	}

	DefineAttribute."cpc" {
		# Token set reference name and type
		token_ref	"sof_tkn_comp.word"
	}

	DefineAttribute."is_pages" {
		# Token set reference name and type
		token_ref	"sof_tkn_comp.word"
	}

	DefineAttribute."init_payload_format" {
		# Token set reference name and type
		token_ref	"sof_tkn_process.word"
	}

	# Attribute categories
	attributes {
		#
		# The smart_amp widget name would be constructed using the index and instance attributes.
		# For ex: "smart_amp.1.1" or "smart_amp.10.2" etc.
		#
		!constructor [
			"index"
			"instance"
		]

		#
		# mandatory attributes that must be provided when the class is instantiated
		#
		!mandatory [
			"no_pm"
			"uuid"
		]

		#
		# immutable attributes cannot be modified in the object instance
		#
		!immutable [
			"type"
		]

		#
		# deprecated attributes should not be added in the object instance
		#
		!deprecated [
			"preload_count"
		]

		#
		# smart_amp widget objects instantiated within the same alsaconf node must have unique
		# instance attribute
		#
		unique	"instance"
	}

	# Default attribute values for smart_amp widget

	# smart amp module UUID is not unique, and should be assigned in the top-level conf
	type			"effect"
	no_pm 			"true"
	core_id			0
	cpc 			5000
	is_pages		1
	num_sink_pins	2
	num_source_pins	1
	init_payload_format	2
}
