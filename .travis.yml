sudo: required

language: c

git:
  depth: false

services:
  - docker

# We don't need the strict sequence of stages; for now we use stages
# only as presentation labels.  The strict order hurts only in case of a
# failure however there are only basic, non-flaky tests here.
stages:
  - buildonly
  - qemutest
  - testbench
  - doxygen


jobs:
  include:

    - &build-platform
      stage: buildonly
      before_install:
        &docker-pull-sof
        docker pull thesofproject/sof && docker tag thesofproject/sof sof
      script:
        ./scripts/docker-run.sh ./scripts/xtensa-build-all.sh -j $PLATFORM
      env: PLATFORM='sue'

    - <<: *build-platform
      env: PLATFORM='jsl'

    - name: "./scripts/build-tools.sh"
      stage: buildonly
      before_install: *docker-pull-sof
      script: ./scripts/docker-run.sh ./scripts/build-tools.sh

    - name: "./scripts/host-build-all.sh"
      stage: buildonly
      before_install: *docker-pull-sof
      script: ./scripts/docker-run.sh ./scripts/host-build-all.sh -l

    - &qemuboottest
      stage: qemutest
      script:
        - sed -i $(($(grep "config HAVE_AGENT" -n src/platform/Kconfig | cut -f1 -d:)+2))"s/default y/default n/" src/platform/Kconfig
        - ./scripts/docker-run.sh ./scripts/xtensa-build-all.sh -r -j $PLATFORM
        - ./scripts/docker-qemu.sh ../sof.git/scripts/qemu-check.sh $PLATFORM
      env: PLATFORM='byt cht'
      before_install:
        - *docker-pull-sof
        - docker pull thesofproject/sofqemu && docker tag thesofproject/sofqemu sofqemu

    - <<: *qemuboottest
      env: PLATFORM='bdw hsw'

    - <<: *qemuboottest
      env: PLATFORM='apl skl kbl'

    - <<: *qemuboottest
      env: PLATFORM='cnl icl'

    - <<: *qemuboottest
      env: PLATFORM='imx8 imx8x imx8m'


    - stage: testbench
      before_install: *docker-pull-sof
      script:
        - ./scripts/docker-run.sh ./scripts/build-tools.sh -t &> /dev/null
        - ./scripts/docker-run.sh ./scripts/host-build-all.sh
        - ./scripts/host-testbench.sh


    - stage: doxygen

      before_install: sudo apt-get -y install ninja-build doxygen graphviz

      script:

        # Show ALL warnings. Warnings don't cause doxygen to fail (yet).
        - mkdir -p doxybuild && pushd doxybuild && cmake -GNinja -S ../doc && ninja -v doc
        - popd

        # Build again (it's very quick) and report a failure in Travis if
        # any issue. This time doxygen stops on the first issue.
        - printf 'WARN_AS_ERROR = YES\n' >> doc/sof.doxygen.in
        - ninja -C doxybuild -v doc
